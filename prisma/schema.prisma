generator client {
  provider = "prisma-client-js"
  // output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("directUrl")
}

// Model untuk Autentikasi
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  nama      String
  password  String
  role      Role     @default(ADMIN_SATKER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  SUPER_ADMIN
  ADMIN_SATKER
}

// Model untuk Inventaris
model Satker {
  id             String      @id @default(cuid())
  kode           String      @unique
  nama           String
  personil       Personil[]
  ht             HT[]
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model Personil {
  id              String        @id @default(cuid())
  nrp             String        @unique
  nama            String
  jabatan         String
  satker          Satker        @relation(fields: [satkerId], references: [id])
  satkerId        String
  peminjaman      Peminjaman[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
}

model HT {
  id              String        @id @default(cuid())
  serialNumber    String        @unique
  kodeHT          String        @unique
  merk            String
  jenis           String
  tahunBuat       Int
  tahunPeroleh    Int
  status          HTStatus      @default(TERSEDIA)
  satker          Satker        @relation(fields: [satkerId], references: [id])
  satkerId        String
  peminjaman      Peminjaman[]
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@map("HT")
}

enum HTStatus {
  TERSEDIA
  DIPINJAM
  RUSAK
  HILANG
}

// Model untuk Transaksi
model Peminjaman {
  id                 String     @id @default(cuid())
  ht                 HT         @relation(fields: [htId], references: [id])
  htId               String
  personil           Personil   @relation(fields: [personilId], references: [id])
  personilId         String
  adminPencatatId    String     // ID User Admin yang mencatat
  kondisiSaatPinjam  String
  tanggalPinjam      DateTime   @default(now())
  tanggalKembali     DateTime?
  kondisiSaatKembali String?
}
