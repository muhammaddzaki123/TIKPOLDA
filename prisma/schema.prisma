generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Satker {
  id        String @id @default(cuid())
  nama_satker String @unique
  kode_satker String? @unique

  // Relasi
  users     User[]
  hts       HT[]
}

enum Role {
  SUPER_ADMIN
  ADMIN_SATKER
}

model User {
  id       String    @id @default(cuid())
  email    String    @unique
  password String
  nama     String
  role     Role

  // Relasi ke Satker (wajib ada jika role-nya ADMIN_SATKER)
  satkerId String?
  satker   Satker?   @relation(fields: [satkerId], references: [id])

  // Relasi ke Peminjaman (admin yang memproses)
  peminjaman_diproses Peminjaman[]
}

enum StatusHT {
  TERSEDIA
  DIPINJAM
  RUSAK
}

model HT {
  id              String        @id @default(cuid())
  serial_number   String        @unique
  kode_ht         String        @unique
  merk            String
  jenis           String
  tahun_buat      Int
  tahun_peroleh   Int
  status          StatusHT      @default(TERSEDIA)
  kondisi         String

  // Relasi ke Satker (HT ini milik satker mana)
  satkerId        String
  satker          Satker        @relation(fields: [satkerId], references: [id])

  // Relasi ke riwayat peminjamannya
  peminjaman      Peminjaman[]
}

enum StatusPeminjaman {
  AKTIF
  SELESAI
}

model Peminjaman {
  id                 String           @id @default(cuid())
  tanggal_pinjam     DateTime         @default(now())
  tanggal_kembali    DateTime?
  peminjam_nrp       String
  peminjam_nama      String
  peminjam_jabatan   String
  peminjam_satker    String
  status_peminjaman  StatusPeminjaman @default(AKTIF)

  // Relasi ke HT yang dipinjam
  htId               String
  ht                 HT               @relation(fields: [htId], references: [id])

  // Relasi ke Admin yang memproses
  adminId            String
  processedBy        User             @relation(fields: [adminId], references: [id])
}
