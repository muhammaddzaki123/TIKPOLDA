generator client {
  provider = "prisma-client-js"
  // output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("directUrl")
}

// Model untuk Satuan Kerja (Satker)
model Satker {
  id       String     @id @default(cuid())
  nama     String     @unique 
  admins   User[]
  personil Personil[]
  ht       HT[]
}

// Model untuk Pengguna Aplikasi (Admin Satker & Super Admin)
model User {
  id       String @id @default(cuid())
  nama     String
  email    String @unique
  password String 
  role     Role   @default(ADMIN_SATKER)
  satkerId String?
  satker   Satker?  @relation(fields: [satkerId], references: [id])
}

enum Role {
  SUPER_ADMIN
  ADMIN_SATKER
}

// Model untuk Personil Kepolisian
model Personil {
  id         String       @id @default(cuid())
  nrp        String       @unique
  nama       String
  jabatan    String
  satkerId   String
  satker     Satker       @relation(fields: [satkerId], references: [id])
  peminjaman Peminjaman[]

  // Relasi untuk HT yang sedang dipegang saat ini
  htDipegang HT[]         @relation("PemegangHT")
}

// Model untuk Data Handy Talky (HT)
model HT {
  id           String     @id @default(cuid())
  serialNumber String     @unique
  kodeHT       String     @unique
  merk         String
  jenis        String
  tahunBuat    Int
  tahunPeroleh Int
  status       StatusHT   @default(TERSEDIA)
  createdAt    DateTime   @default(now())

  // Relasi ke Satker pemilik
  satkerId String
  satker   Satker   @relation(fields: [satkerId], references: [id])

  // Relasi ke pemegang saat ini (untuk efisiensi)
  pemegangId String?
  pemegang   Personil?  @relation("PemegangHT", fields: [pemegangId], references: [id])

  // Relasi ke riwayat peminjaman
  peminjaman Peminjaman[]
}

enum StatusHT {
  TERSEDIA
  DIPINJAM
  RUSAK
  PERBAIKAN
}

// Model untuk mencatat riwayat Peminjaman
model Peminjaman {
  id                 String    @id @default(cuid())
  htId               String
  ht                 HT        @relation(fields: [htId], references: [id])
  personilId         String
  personil           Personil  @relation(fields: [personilId], references: [id])
  tanggalPinjam      DateTime  @default(now())
  tanggalKembali     DateTime? 
  kondisiSaatPinjam  String
  kondisiSaatKembali String?
  adminPencatatId    String   
}
